{"version":3,"file":"static/js/839.4c092253.chunk.js","mappings":"mLACA,GAAgB,cAAgB,qCAAqC,kBAAoB,yCAAyC,kBAAoB,yCAAyC,kBAAoB,yCAAyC,WAAa,kCAAkC,aAAe,qC,4BCI3S,SAASA,EAAT,GAAuC,IAAVC,EAAS,EAATA,MACpCC,GAAWC,EAAAA,EAAAA,MACjB,OACE,eAAIC,UAAWC,EAAAA,kBAAf,UACE,UAAC,KAAD,CACED,UAAWC,EAAAA,kBACXC,GAAI,CACFC,SAAS,WAAD,OAAaN,EAAMO,IAC3BC,MAAO,CAAEC,KAAMR,GACfS,MAAO,uBALX,WAQE,gBACEC,IAAG,yCAAoCX,EAAMY,aAC7CC,IAAKb,EAAMc,eACXC,MAAM,MACNZ,UAAWC,EAAAA,SAEb,gBAAKD,UAAWC,EAAAA,aAAhB,UACE,iBAAMD,UAAWC,EAAAA,WAAjB,SAAqCJ,EAAMgB,eCnBtC,SAASC,EAAT,GAAoC,IAAXC,EAAU,EAAVA,OACtC,OACE,gBAAKf,UAAWC,EAAAA,cAAhB,UACE,eAAID,UAAWC,EAAAA,kBAAf,SACGc,EAAOC,KAAI,SAAAnB,GAAK,OACf,SAACD,EAAD,CAAmBC,MAAOA,GAAYA,EAAMO,a,0ICTtD,EAA4B,6BAA5B,EAAsE,8BAAtE,EAAmH,gCAAnH,EAAuK,qCAAvK,EAA8N,mC,SCI/M,SAASa,EAAT,GAAqC,IAAbC,EAAY,EAAZA,SACrC,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAcA,OACE,mBAAQrB,UAAWC,EAAnB,UACE,kBAAMiB,SAZW,SAAAI,GACnBA,EAAMC,iBACe,KAAjBH,EAAMI,QAIVN,EAASE,GACTC,EAAS,KAJPI,EAAAA,GAAAA,MAAY,8BASkBzB,UAAWC,EAAzC,WACE,mBAAQyB,KAAK,SAAS1B,UAAWC,EAAjC,UACE,iBAAMD,UAAWC,EAAjB,uBAEF,kBACED,UAAWC,EACXyB,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,gBACZC,SAzBc,SAAAR,GACpBD,EAASC,EAAMS,cAAcC,MAAMC,uB,cCAxB,SAASC,IACtB,OAA4Bf,EAAAA,EAAAA,UAAS,MAArC,eAAOJ,EAAP,KAAeoB,EAAf,KACMC,GAAcC,EAAAA,EAAAA,MACpB,GAA0BlB,EAAAA,EAAAA,WAAS,kCAAMiB,EAAY,GAAGE,IAAI,gBAAzB,QAAqC,MAAxE,eAAOlB,EAAP,KAAcC,EAAd,KACMkB,GAAWC,EAAAA,EAAAA,MACX1C,GAAWC,EAAAA,EAAAA,OAEjB0C,EAAAA,EAAAA,YAAU,WACRrB,GAASsB,OAEX,IAAMA,EAAY,WAChBC,EAAAA,GAA2BvB,GAAOwB,MAAK,YAAkB,IAAfC,EAAc,EAAdA,QACjB,IAAnBA,EAAQC,OAIZX,EAAUU,GAHRpB,EAAAA,GAAAA,MAAA,gEAYN,OACE,iCACE,SAACR,EAAD,CAAcC,SAPD,SAAAE,GACfC,EAASD,GACTe,EAAU,IACVI,GAAS,kBAAKzC,GAAN,IAAgBiD,OAAO,SAAD,OAAW3B,OAILpB,UAAWC,IAC5Cc,IAAU,SAACD,EAAA,EAAD,CAAeC,OAAQA,EAAQiC,KAAMjC","sources":["webpack://goit-react-hw-05-movies/./src/components/MoviesGallery/MoviesGallery.module.css?276e","components/MoviesGallery/MoviesGalleryItem.js","components/MoviesGallery/MoviesGallery.js","webpack://goit-react-hw-05-movies/./src/components/SearchMovies/Searchbar.module.css?b637","components/SearchMovies/SearchMovies.js","views/PageSearch/PageSearch.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"MoviesGallery\":\"MoviesGallery_MoviesGallery__tqAIU\",\"MoviesGalleryList\":\"MoviesGallery_MoviesGalleryList__pjh-c\",\"MoviesGalleryItem\":\"MoviesGallery_MoviesGalleryItem__+mbjI\",\"GalleryItemMovies\":\"MoviesGallery_GalleryItemMovies__LW-jm\",\"movieTitle\":\"MoviesGallery_movieTitle__Lnio6\",\"titleWrapper\":\"MoviesGallery_titleWrapper__dy8hb\"};","import React from 'react';\nimport styles from '../MoviesGallery/MoviesGallery.module.css';\nimport { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport default function MoviesGalleryItem({ movie }) {\n  const location = useLocation();\n  return (\n    <li className={styles.MoviesGalleryItem}>\n      <Link\n        className={styles.GalleryItemMovies}\n        to={{\n          pathname: `/movies/${movie.id}`,\n          state: { from: location },\n          label: 'Back to movies list',\n        }}\n      >\n        <img\n          src={`https://image.tmdb.org/t/p/w300${movie.poster_path}`}\n          alt={movie.original_title}\n          width=\"300\"\n          className={styles.image}\n        />\n        <div className={styles.titleWrapper}>\n          <span className={styles.movieTitle}>{movie.title}</span>\n        </div>\n      </Link>\n    </li>\n  );\n}\n\nMoviesGalleryItem.propTypes = {\n  movie: PropTypes.object.isRequired,\n};\n","import React from 'react';\nimport MoviesGalleryItem from './MoviesGalleryItem';\nimport styles from '../MoviesGallery/MoviesGallery.module.css';\nimport PropTypes from 'prop-types';\n\nexport default function MoviesGallery({ movies }) {\n  return (\n    <div className={styles.MoviesGallery}>\n      <ul className={styles.MoviesGalleryList}>\n        {movies.map(movie => (\n          <MoviesGalleryItem movie={movie} key={movie.id} />\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nMoviesGallery.propTypes = {\n  movies: PropTypes.array.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"searchbar\":\"Searchbar_searchbar__29YDU\",\"searchForm\":\"Searchbar_searchForm__-PtX4\",\"searchButton\":\"Searchbar_searchButton__vzaQP\",\"searchButtonLabel\":\"Searchbar_searchButtonLabel__87xus\",\"searchFormInput\":\"Searchbar_searchFormInput__hzTdt\"};","import { useState } from 'react';\nimport styles from '../SearchMovies/Searchbar.module.css';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\n\nexport default function SearchMovies({ onSubmit }) {\n  const [query, setQuery] = useState('');\n  const handleChanger = event => {\n    setQuery(event.currentTarget.value.toLowerCase());\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (query.trim() === '') {\n      toast.error('Please enter search query');\n      return;\n    }\n    onSubmit(query);\n    setQuery('');\n  };\n\n  return (\n    <header className={styles.searchbar}>\n      <form onSubmit={handleSubmit} className={styles.searchForm}>\n        <button type=\"submit\" className={styles.searchButton}>\n          <span className={styles.searchButtonLabel}>Search</span>\n        </button>\n        <input\n          className={styles.searchFormInput}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search films \"\n          onChange={handleChanger}\n        />\n      </form>\n    </header>\n  );\n}\n\nSearchMovies.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { useEffect, useState } from 'react';\nimport { toast } from 'react-toastify';\nimport { useNavigate, useLocation, useSearchParams } from 'react-router-dom';\nimport * as fetchAPI from '../../API/MoviesApi';\nimport SearchMovies from '../../components/SearchMovies/SearchMovies';\nimport MoviesGallery from 'components/MoviesGallery/MoviesGallery';\nimport styles from '../../components/SearchMovies/Searchbar.module.css';\n\nexport default function PageSearch() {\n  const [movies, setMovies] = useState(null);\n  const searchParam = useSearchParams();\n  const [query, setQuery] = useState(() => searchParam[0].get('query') ?? '');\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  useEffect(() => {\n    query && getMovies();\n  });\n  const getMovies = () => {\n    fetchAPI.fetchSearchMovies(query).then(({ results }) => {\n      if (results.length === 0) {\n        toast.error(`There are is no results found.Please try another request`);\n        return;\n      }\n      setMovies(results);\n    });\n  };\n\n  const onSubmit = query => {\n    setQuery(query);\n    setMovies([]);\n    navigate({ ...location, search: `query=${query}` });\n  };\n  return (\n    <>\n      <SearchMovies onSubmit={onSubmit} className={styles.searchbar} />\n      {movies && <MoviesGallery movies={movies} data={movies} />}\n    </>\n  );\n}\n"],"names":["MoviesGalleryItem","movie","location","useLocation","className","styles","to","pathname","id","state","from","label","src","poster_path","alt","original_title","width","title","MoviesGallery","movies","map","SearchMovies","onSubmit","useState","query","setQuery","event","preventDefault","trim","toast","type","autoComplete","autoFocus","placeholder","onChange","currentTarget","value","toLowerCase","PageSearch","setMovies","searchParam","useSearchParams","get","navigate","useNavigate","useEffect","getMovies","fetchAPI","then","results","length","search","data"],"sourceRoot":""}