{"version":3,"file":"static/js/392.d4b7dfe3.chunk.js","mappings":"wOACA,GAAgB,UAAY,gCAAgC,MAAQ,4BAA4B,UAAY,gCAAgC,UAAY,gCAAgC,QAAU,8BAA8B,WAAa,iCAAiC,YAAc,kCAAkC,QAAU,+B,SCCzT,SAASA,EAAT,GAAkC,IAAVC,EAAS,EAATA,MACrC,OACE,iBAAKC,UAAWC,EAAAA,QAAhB,WACE,gBACEC,IAAG,yCAAoCH,EAAMI,aAC7CC,IAAKL,EAAMM,eACXC,MAAM,MACNN,UAAWC,EAAAA,SAEb,iBAAKD,UAAWC,EAAAA,UAAhB,WACE,eAAID,UAAWC,EAAAA,WAAf,SAAmCF,EAAMM,kBACzC,eAAGL,UAAWC,EAAAA,UAAd,yBAEE,iBAAMD,UAAWC,EAAAA,QAAjB,SAAkCF,EAAMQ,mBAE1C,eAAGP,UAAWC,EAAAA,SAAd,uBACW,iBAAMD,UAAWC,EAAAA,QAAjB,SAAkCF,EAAMS,eAEnD,eAAGR,UAAWC,EAAAA,SAAd,qBAEE,iBAAMD,UAAWC,EAAAA,QAAjB,SACGF,EAAMU,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,QAAMC,KAAK,gB,cCtBxD,GAAgB,IAAM,uBAAuB,KAAO,wBAAwB,SAAW,6B,MCDxCC,EAASC,ECG3CC,GAAmBC,E,QAAAA,IAAOC,EAAAA,GAAPD,CAAH,IDHkBH,ECGlB,oUDFtBC,IACHA,EAAMD,EAAQK,MAAM,ICCK,EDEpBC,OAAOC,OAAOD,OAAOE,iBAAiBR,EAAS,CACpDC,IAAK,CACHQ,MAAOH,OAAOC,OAAON,SECZ,SAASS,IAAa,IAAD,QAE5BC,GAAWC,EAAAA,EAAAA,MACjB,GAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAO5B,EAAP,KAAc6B,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAaR,OAXAE,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GAAuBH,GAASI,KAAKL,KACpC,CAACC,KAUF,iCACE,SAACb,EAAD,CACEkB,GAAE,iBAAET,QAAF,IAAEA,GAAF,UAAEA,EAAUU,aAAZ,aAAE,EAAiBC,YAAnB,QAA2B,IAC7BC,KAAK,SACLrC,UAAWC,EAAAA,OAHb,qBAOCF,IACC,+BACE,iBAAKC,UAAWC,EAAAA,QAAhB,WACE,SAACH,EAAD,CAAcC,MAAOA,KACrB,eAAIC,UAAWC,EAAAA,SAAf,sCACA,SAAC,KAAD,CACEiC,GAAI,CACFI,SAAS,WAAD,OAAaT,EAAb,UAEVM,MAAO,CAAEC,KAAI,UAAEX,EAASU,aAAX,aAAE,EAAgBC,MAC/BpC,UAAWC,EAAAA,KALb,mBASA,SAAC,KAAD,CACEiC,GAAI,CACFI,SAAS,WAAD,OAAaT,EAAb,aAEVM,MAAO,CAAEC,KAAI,UAAEX,EAASU,aAAX,aAAE,EAAgBC,MAC/BpC,UAAWC,EAAAA,KALb,sBASA,SAAC,EAAAsC,SAAD,CAAUC,UAAU,SAACC,EAAA,EAAD,IAApB,UACE,SAAC,KAAD","sources":["webpack://goit-react-hw-05-movies/./src/components/MovieDetails/MovieDetails.module.css?9ca9","components/MovieDetails/MovieDetails.js","webpack://goit-react-hw-05-movies/./src/views/Page/MoviePage.module.css?169c","../node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js","views/Page/Btn.styled.js","views/Page/MoviePage.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movieCard\":\"MovieDetails_movieCard__LWJIF\",\"image\":\"MovieDetails_image__tPD8f\",\"movieInfo\":\"MovieDetails_movieInfo__XAfDM\",\"movieItem\":\"MovieDetails_movieItem__Xm+lY\",\"voteSum\":\"MovieDetails_voteSum__oSfqJ\",\"movieTitle\":\"MovieDetails_movieTitle__qwoTW\",\"description\":\"MovieDetails_description__n2kBz\",\"wrapper\":\"MovieDetails_wrapper__cJixg\"};","import styles from '../MovieDetails/MovieDetails.module.css';\n\nexport default function MovieDetails({ movie }) {\n  return (\n    <div className={styles.wrapper}>\n      <img\n        src={`https://image.tmdb.org/t/p/w300${movie.poster_path}`}\n        alt={movie.original_title}\n        width=\"300\"\n        className={styles.image}\n      />\n      <div className={styles.movieInfo}>\n        <h2 className={styles.movieTitle}>{movie.original_title}</h2>\n        <p className={styles.movieItem}>\n          User score:\n          <span className={styles.voteSum}>{movie.vote_average}</span>\n        </p>\n        <p className={styles.infoItem}>\n          Overview:<span className={styles.infoSum}>{movie.overview}</span>\n        </p>\n        <p className={styles.infoItem}>\n          Genres:\n          <span className={styles.infoSum}>\n            {movie.genres.map(genre => genre.name).join('/')}\n          </span>\n        </p>\n      </div>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"MoviePage_btn__Adt1B\",\"link\":\"MoviePage_link__mvWAa\",\"addTitle\":\"MoviePage_addTitle__RRsrX\"};","export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const ButtonLinkStyled = styled(NavLink)`\n  display: block;\n  width: 60px;\n  margin-bottom: 15px;\n  padding: 5px;\n  border-radius: 5%;\n  border: 0;\n  text-decoration: none;\n  cursor: pointer;\n  background-color: yellow;\n  color: blue;\n  transition: all 250 linear;\n  border-radius: 4px;\n  &:hover,\n  &:focus {\n    color: rgb(10, 47, 158);\n  }\n`;\n","import { useState, useEffect, Suspense } from 'react';\nimport { Outlet, Link, useParams, useLocation } from 'react-router-dom';\nimport LoaderSpinner from '../../components/Loader/Loader';\nimport MovieDetails from '../../components/MovieDetails/MovieDetails';\nimport * as fetchAPI from '../../API/MoviesApi';\nimport styles from '../Page/MoviePage.module.css';\nimport { ButtonLinkStyled } from './Btn.styled';\n\nexport default function MoviePage() {\n  // const navigate = useNavigate();\n  const location = useLocation();\n  const [movie, setMovie] = useState(null);\n  const { movieId } = useParams();\n  // const { url } = useMatch();\n  useEffect(() => {\n    fetchAPI.fetchMoviesId(movieId).then(setMovie);\n  }, [movieId]);\n\n  // const goBack = () => {\n  //   navigate({\n  //     pathname: location.state.from.search || '/movies',\n  //     search: location.state?.searchValue || '',\n  //   });\n  // };\n\n  return (\n    <>\n      <ButtonLinkStyled\n        to={location?.state?.from ?? '/'}\n        type=\"button\"\n        className={styles.button}\n      >\n        Go back\n      </ButtonLinkStyled>\n      {movie && (\n        <>\n          <div className={styles.wrapper}>\n            <MovieDetails movie={movie} />\n            <h4 className={styles.addTitle}>Additional information:</h4>\n            <Link\n              to={{\n                pathname: `/movies/${movieId}/cast`,\n              }}\n              state={{ from: location.state?.from }}\n              className={styles.link}\n            >\n              Cast\n            </Link>\n            <Link\n              to={{\n                pathname: `/movies/${movieId}/reviews`,\n              }}\n              state={{ from: location.state?.from }}\n              className={styles.link}\n            >\n              Reviews\n            </Link>\n            <Suspense fallback={<LoaderSpinner />}>\n              <Outlet />\n            </Suspense>\n          </div>\n        </>\n      )}\n    </>\n  );\n}\n"],"names":["MovieDetails","movie","className","styles","src","poster_path","alt","original_title","width","vote_average","overview","genres","map","genre","name","join","strings","raw","ButtonLinkStyled","styled","NavLink","slice","Object","freeze","defineProperties","value","MoviePage","location","useLocation","useState","setMovie","movieId","useParams","useEffect","fetchAPI","then","to","state","from","type","pathname","Suspense","fallback","Loader"],"sourceRoot":""}