{"version":3,"file":"static/js/215.a5b3ae14.chunk.js","mappings":"mLACA,GAAgB,cAAgB,qCAAqC,kBAAoB,yCAAyC,kBAAoB,yCAAyC,kBAAoB,yCAAyC,WAAa,kCAAkC,aAAe,qC,4BCI3S,SAASA,EAAT,GAAuC,IAAVC,EAAS,EAATA,MACpCC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,eAAIC,UAAWC,EAAAA,kBAAf,UACE,UAAC,KAAD,CACED,UAAWC,EAAAA,kBACXC,GAAE,kBAAaL,EAAMM,IACrBC,MAAO,CAAEC,KAAMP,GAHjB,WAKE,gBACEQ,IAAG,yCAAoCT,EAAMU,aAC7CC,IAAKX,EAAMY,eACXC,MAAM,MACNV,UAAWC,EAAAA,SAEb,gBAAKD,UAAWC,EAAAA,aAAhB,UACE,iBAAMD,UAAWC,EAAAA,WAAjB,SAAqCJ,EAAMc,eCjBtC,SAASC,EAAT,GAAoC,IAAXC,EAAU,EAAVA,OACtC,OACE,gBAAKb,UAAWC,EAAAA,cAAhB,UACE,eAAID,UAAWC,EAAAA,kBAAf,SACGY,EAAOC,KAAI,SAAAjB,GAAK,OACf,SAACD,EAAD,CAAmBC,MAAOA,GAAYA,EAAMM,a,+ECTtD,EAA+B,kC,SCEhB,SAASY,EAAT,GAAgC,IAATC,EAAQ,EAARA,KACpC,OAAO,eAAIhB,UAAWC,EAAf,SAAqCe,I,kCCC/B,SAASC,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOL,EAAP,KAAeM,EAAf,KAIA,OAHAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,KAA4BC,MAAK,gBAAGC,EAAH,EAAGA,QAAH,OAAiBJ,EAAUI,QAC3D,KAED,iCACE,SAACR,EAAD,CAAaC,KAAK,oBACjBH,IAAU,SAACD,EAAA,EAAD,CAAeC,OAAQA","sources":["webpack://goit-react-hw-05-movies/./src/components/MoviesGallery/MoviesGallery.module.css?276e","components/MoviesGallery/MoviesGalleryItem.js","components/MoviesGallery/MoviesGallery.js","webpack://goit-react-hw-05-movies/./src/components/PageHeading/PageHeading.module.css?b132","components/PageHeading/PageHeading.js","views/HomePage.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"MoviesGallery\":\"MoviesGallery_MoviesGallery__tqAIU\",\"MoviesGalleryList\":\"MoviesGallery_MoviesGalleryList__pjh-c\",\"MoviesGalleryItem\":\"MoviesGallery_MoviesGalleryItem__+mbjI\",\"GalleryItemMovies\":\"MoviesGallery_GalleryItemMovies__LW-jm\",\"movieTitle\":\"MoviesGallery_movieTitle__Lnio6\",\"titleWrapper\":\"MoviesGallery_titleWrapper__dy8hb\"};","import React from 'react';\nimport styles from '../MoviesGallery/MoviesGallery.module.css';\nimport { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport default function MoviesGalleryItem({ movie }) {\n  const location = useLocation();\n\n  return (\n    <li className={styles.MoviesGalleryItem}>\n      <Link\n        className={styles.GalleryItemMovies}\n        to={`/movies/${movie.id}`}\n        state={{ from: location }}\n      >\n        <img\n          src={`https://image.tmdb.org/t/p/w300${movie.poster_path}`}\n          alt={movie.original_title}\n          width=\"300\"\n          className={styles.image}\n        />\n        <div className={styles.titleWrapper}>\n          <span className={styles.movieTitle}>{movie.title}</span>\n        </div>\n      </Link>\n    </li>\n  );\n}\n\nMoviesGalleryItem.propTypes = {\n  movie: PropTypes.object.isRequired,\n};\n","import React from 'react';\nimport MoviesGalleryItem from './MoviesGalleryItem';\nimport styles from '../MoviesGallery/MoviesGallery.module.css';\nimport PropTypes from 'prop-types';\n\nexport default function MoviesGallery({ movies }) {\n  return (\n    <div className={styles.MoviesGallery}>\n      <ul className={styles.MoviesGalleryList}>\n        {movies.map(movie => (\n          <MoviesGalleryItem movie={movie} key={movie.id} />\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nMoviesGallery.propTypes = {\n  movies: PropTypes.array.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"headingTitle\":\"PageHeading_headingTitle__QOpnv\"};","import styles from '../PageHeading/PageHeading.module.css';\nimport PropTypes from 'prop-types';\n\nexport default function PageHeading({ text }) {\n  return <h1 className={styles.headingTitle}>{text}</h1>;\n}\n\nPageHeading.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n","import PageHeading from '../components/PageHeading/PageHeading';\nimport { useState, useEffect } from 'react';\nimport * as fetchIP from '../API/MoviesApi';\nimport MoviesGallery from '../components/MoviesGallery/MoviesGallery';\n\nexport default function HomePage() {\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    fetchIP.fetchTrendsMovies().then(({ results }) => setMovies(results));\n  }, []);\n  return (\n    <>\n      <PageHeading text=\"Trending movies\" />\n      {movies && <MoviesGallery movies={movies} />}\n    </>\n  );\n}\n"],"names":["MoviesGalleryItem","movie","location","useLocation","className","styles","to","id","state","from","src","poster_path","alt","original_title","width","title","MoviesGallery","movies","map","PageHeading","text","HomePage","useState","setMovies","useEffect","fetchIP","then","results"],"sourceRoot":""}